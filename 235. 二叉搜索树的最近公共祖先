/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        TreeNode *current = root, *pp = NULL, *pq = NULL;

        while (pp != p && pq != q) {
            pp = findRoute(current, p);
            pq = findRoute(current, q);

            if (pp != pq) {
                break;
            }

            current = pp;
        }

        return current;
    }

private:
    TreeNode* findRoute(TreeNode* current, TreeNode* target) {
        if (target->val == current->val) {
            return current;
        } else if (target->val < current->val) {
            return current->left;
        } else {
            return current->right;
        }
    }
};
