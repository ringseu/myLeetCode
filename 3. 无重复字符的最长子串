class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if (s.size() == 0 || s.size() == 1) {
            return s.size();
        }

        int begin = 0, end = 0, result = 0;
        unordered_set<int> tmp;

        while (begin < s.size() && end < s.size()) {
            char c = s[end];

            if (tmp.end() != tmp.find(c)) { //存在重复字符
                tmp.erase(s[begin]);
                begin++;
            } else {
                if (end - begin + 1 > result) {
                    result = end - begin + 1;
                }
                tmp.insert(c);
                end++;
            }
        }

        return result;
    }
};
