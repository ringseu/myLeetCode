/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<pair<TreeNode*, int>> q;
        vector<vector<int> > result;
        int current_level = -1;

        if (root) {
            q.push(make_pair(root, 0));
        }

        while (q.size() > 0) {
            auto node = q.front();
            q.pop();

            if (node.second > current_level) { //到达新的一层，新建一个vector
                vector<int> v;
                result.push_back(v);
                current_level++;
            }

            result[current_level].push_back(node.first->val);
            if (node.first->left) {
                q.push(make_pair(node.first->left, node.second+1));
            }
            if (node.first->right) {
                q.push(make_pair(node.first->right, node.second+1));
            }
        }

        return result;
    }
};
