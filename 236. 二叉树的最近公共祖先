/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        TreeNode* result = NULL;
        dfs(root, p, q, result);
        return result;
    }

private:
    int dfs(TreeNode* root, TreeNode* p, TreeNode* q, TreeNode* &result) { //1-只找到p，2-只找到q，3-找到p和q
        TreeNode *node = root;
        int ret = 0, ret_left = 0, ret_right = 0;

        if (node == NULL) {
            return 0;
        } else if (node == p) {
            ret = 1;
        } else if (node == q) {
            ret = 2;
        } else if (node->left == NULL && node->right == NULL) {
            return 0;
        }

        ret_left = dfs(node->left, p, q, result);
        ret_right = dfs(node->right, p, q, result);

        ret = ret + ret_left + ret_right;
        if (ret == 3 && result == NULL) {
            result = node;
        }

        return ret;
    }
};
