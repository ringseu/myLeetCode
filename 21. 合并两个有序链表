/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *head = NULL, *tail = NULL, *head1 = l1, *head2 = l2;

        if (head1 == NULL) {
            return head2;
        }

        if (head2 == NULL) {
            return head1;
        }

        while (head1 != NULL && head2 != NULL) {
            if (head1->val < head2->val) {
                if (head == NULL) {
                    head = tail = head1;
                } else {
                    tail->next = head1;
                    tail = tail->next;
                }
                head1 = head1->next;
            } else {
                if (head == NULL) {
                    head = tail = l2;
                } else {
                    tail->next = head2;
                    tail = tail->next;
                }
                head2 = head2->next;
            }
        }

        if (head1 == NULL) {
            tail->next = head2;
        } else {
            tail->next = head1;
        }

        return head;
    }
};
